{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "stepper1",
  "type": "registry:component",
  "title": "Stepper1",
  "description": "Stepper1",
  "registryDependencies": [
    "button",
    "https://microinteractionsui.com/r/stepper.json"
  ],
  "files": [
    {
      "path": "src/registry/components/stepper1.tsx",
      "content": "\"use client\"\nimport { Button } from \"@/components/ui/button\";\nimport {\n    Stepper,\n    StepperDescription,\n    StepperIndicator,\n    StepperItem,\n    StepperSeparator,\n    StepperTitle,\n    StepperTrigger,\n} from \"@/registry/components/stepper\"\nimport { useState } from \"react\";\n\nconst steps = [\n    {\n        step: 1,\n        title: \"Step 1\",\n        description: \"This is step 1\"\n    },\n    {\n        step: 2,\n        title: \"Step 2\",\n        description: \"This is step 2\"\n    },\n    {\n        step: 3,\n        title: \"Step 3\",\n        description: \"This is step 3\"\n    }\n];\n\nexport default function Stepper1() {\n    const [currentStep, setCurrentStep] = useState<number>(1);\n\n    return (\n        <div className=\"space-y-6\">\n            <Stepper\n                value={currentStep}\n                orientation=\"vertical\">\n                {steps.map(({ step, title, description }) => (\n                    <StepperItem\n                        key={step}\n                        step={step}\n                        className=\"relative items-start not-last:flex-1\"\n                    >\n                        <StepperTrigger onClick={() => { setCurrentStep(step) }} className=\"items-start rounded pb-12 last:pb-0\">\n                            <StepperIndicator />\n                            <div className=\"space-y-0.5 px-2 text-left\">\n                                <StepperTitle>{title}</StepperTitle>\n                                <StepperDescription>{description}</StepperDescription>\n                            </div>\n                        </StepperTrigger>\n                        {step < steps.length && (\n                            <StepperSeparator className=\"absolute inset-y-0 top-[calc(1.5rem+0.125rem)] left-3 -order-1 m-0 -translate-x-1/2 group-data-[orientation=horizontal]/stepper:w-[calc(100%-1.5rem-0.25rem)] group-data-[orientation=horizontal]/stepper:flex-none group-data-[orientation=vertical]/stepper:h-[calc(100%-1.5rem-0.25rem)]\" />\n                        )}\n                    </StepperItem>\n                ))}\n            </Stepper>\n            <div className=\"flex justify-center space-x-4\">\n                <Button\n                    variant=\"outline\"\n                    className=\"w-32\"\n                    onClick={() => setCurrentStep((prev) => prev - 1)}\n                    disabled={currentStep === 1}\n                >\n                    Prev step\n                </Button>\n                <Button\n                    variant=\"outline\"\n                    className=\"w-32\"\n                    onClick={() => setCurrentStep((prev) => prev + 1)}\n                    disabled={currentStep >= steps.length}\n                >\n                    Next step\n                </Button>\n            </div>\n        </div>\n    )\n}",
      "type": "registry:component"
    }
  ]
}