{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "theme-toggle1",
  "type": "registry:component",
  "title": "ThemeToggle1",
  "description": "ThemeToggle1",
  "dependencies": [
    "motion",
    "next-themes"
  ],
  "files": [
    {
      "path": "src/registry/components/theme-toggle1.tsx",
      "content": "'use client';\n\nimport React, { SVGProps, useEffect, useState } from \"react\";\nimport { motion } from 'motion/react';\nimport { useTheme } from \"next-themes\";\nimport { cn } from \"@/registry/lib/utils\";\n\ntype ToggleSize = 'default' | 'lg' | 'xl';\n\nconst Moon = (props: SVGProps<SVGSVGElement>) => {\n    return (\n        <svg\n            {...props}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 24 24\"\n            fill=\"white\"\n        >\n            <path fillRule=\"evenodd\" d=\"M9.528 1.718a.75.75 0 0 1 .162.819A8.97 8.97 0 0 0 9 6a9 9 0 0 0 9 9 8.97 8.97 0 0 0 3.463-.69.75.75 0 0 1 .981.98 10.503 10.503 0 0 1-9.694 6.46c-5.799 0-10.5-4.7-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 0 1 .818.162Z\" clipRule=\"evenodd\" />\n        </svg>\n    )\n};\n\nconst Sun = (props: SVGProps<SVGSVGElement>) => {\n    return (\n        <svg\n            {...props}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#F59E0B\"\n        >\n            <path d=\"M12 2.25a.75.75 0 0 1 .75.75v2.25a.75.75 0 0 1-1.5 0V3a.75.75 0 0 1 .75-.75ZM7.5 12a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM18.894 6.166a.75.75 0 0 0-1.06-1.06l-1.591 1.59a.75.75 0 1 0 1.06 1.061l1.591-1.59ZM21.75 12a.75.75 0 0 1-.75.75h-2.25a.75.75 0 0 1 0-1.5H21a.75.75 0 0 1 .75.75ZM17.834 18.894a.75.75 0 0 0 1.06-1.06l-1.59-1.591a.75.75 0 1 0-1.061 1.06l1.59 1.591ZM12 18a.75.75 0 0 1 .75.75V21a.75.75 0 0 1-1.5 0v-2.25A.75.75 0 0 1 12 18ZM7.758 17.303a.75.75 0 0 0-1.061-1.06l-1.591 1.59a.75.75 0 0 0 1.06 1.061l1.591-1.59ZM6 12a.75.75 0 0 1-.75.75H3a.75.75 0 0 1 0-1.5h2.25A.75.75 0 0 1 6 12ZM6.697 7.757a.75.75 0 0 0 1.06-1.06l-1.59-1.591a.75.75 0 0 0-1.061 1.06l1.59 1.591Z\" />\n        </svg>\n    )\n};\n\nconst toggleSizeMap = {\n    default: {\n        container: 'w-12 h-6',\n        checkbox: 'w-6 h-6',\n        icon: 'w-3 h-3',\n        offset: '24px',\n    },\n    lg: {\n        container: 'w-16 h-8',\n        checkbox: 'w-8 h-8',\n        icon: 'w-4 h-4',\n        offset: '32px',\n    },\n    xl: {\n        container: 'w-24 h-12',\n        checkbox: 'w-12 h-12',\n        icon: 'w-6 h-6',\n        offset: '48px',\n    },\n};\n\nconst animationVariants = {\n    toggle: {\n        light: (offset: string) => ({\n            left: '0px',\n            right: offset,\n        }),\n        dark: (offset: string) => ({\n            left: offset,\n            right: '0px',\n        })\n    },\n    sun: {\n        light: {\n            y: '0%',\n            x: '0%',\n            opacity: 1\n        },\n        dark: {\n            y: '-100%',\n            x: '100%',\n            opacity: 0\n        }\n    },\n    moon: {\n        light: {\n            y: '-100%',\n            x: '-100%',\n            opacity: 0\n        },\n        dark: {\n            y: '0%',\n            x: '0%',\n            opacity: 1\n        }\n    }\n};\n\nconst springTransition = {\n    type: \"spring\",\n    stiffness: 100,\n    damping: 30\n};\n\nexport default function ThemeToggle1() {\n    const { resolvedTheme, setTheme } = useTheme();\n    const [mounted, setMounted] = useState(false);\n\n    useEffect(() => {\n        setMounted(true);\n    }, []);\n\n    const handleToggle = () => {\n        const newState = resolvedTheme === 'light' ? 'dark' : 'light';\n        setTheme(newState);\n    };\n\n    if (!mounted) {\n        return null;\n    }\n\n    const isDark = resolvedTheme ? resolvedTheme === 'dark' : false;\n    const toggleSize: ToggleSize = 'default';\n    const selectedSize = toggleSizeMap[toggleSize];\n\n    return (\n        <div className=\"flex items-center justify-center\">\n            <div\n                className={cn(\n                    \"relative rounded-full cursor-pointer\",\n                    selectedSize.container,\n                    isDark ? \"bg-gray-800\" : \"bg-gray-200\",\n                )}\n                onClick={handleToggle}\n            >\n                <input\n                    type=\"checkbox\"\n                    className=\"hidden\"\n                    checked={isDark}\n                    onChange={handleToggle}\n                />\n                <motion.div\n                    className={cn(\n                        selectedSize.checkbox,\n                        \"absolute rounded-full flex items-center justify-center overflow-hidden\",\n                        isDark ?\n                            \"bg-black right-0 shadow-lg shadow-black/50\" :\n                            \"bg-white left-0 shadow-lg shadow-white/50\",\n                    )}\n                    animate={isDark ? 'dark' : 'light'}\n                    variants={animationVariants.toggle}\n                    custom={selectedSize.offset}\n                    transition={springTransition}\n                >\n                    <motion.div\n                        className=\"absolute\"\n                        initial=\"light\"\n                        animate={isDark ? 'dark' : 'light'}\n                        variants={animationVariants.sun}\n                        transition={springTransition}\n                    >\n                        <Sun className={selectedSize.icon} />\n                    </motion.div>\n                    <motion.div\n                        className=\"absolute\"\n                        initial=\"light\"\n                        animate={isDark ? 'dark' : 'light'}\n                        variants={animationVariants.moon}\n                        transition={springTransition}\n                    >\n                        <Moon\n                            className={cn(\n                                selectedSize.icon\n                            )}\n                        />\n                    </motion.div>\n                </motion.div>\n            </div>\n        </div>\n    );\n};",
      "type": "registry:component"
    }
  ]
}