{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button2",
  "type": "registry:component",
  "title": "Button2",
  "description": "Button2",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "src/registry/components/button2.tsx",
      "content": "'use client';\n\nimport { Button } from \"@/components/ui/button\";\nimport { motion } from 'motion/react';\nimport React, { useState } from \"react\";\n\nconst animationVariants = {\n    getIconContainerVariants: (iconColor: string, iconColorOnHover: string, iconBgColorOnHover: string) => ({\n        default: {\n            color: iconColor,\n            backgroundColor: \"transparent\",\n            scale: 1\n        },\n        hover: {\n            color: iconColorOnHover,\n            backgroundColor: iconBgColorOnHover,\n            scale: 1.15\n        }\n    }),\n    icon: {\n        default: { rotate: 0 },\n        hover: { rotate: -45 }\n    },\n};\n\nconst animationTransition = {\n    ease: \"linear\",\n    duration: 0.3\n};\n\nexport default function Button2() {\n    const iconColor = \"var(--primary-foreground)\";\n    const iconColorOnHover = \"var(--accent-foreground)\";\n    const iconBgColorOnHover = \"var(--accent)\";\n    const [isHovered, setIsHovered] = useState(false);\n\n    return (\n        <Button\n            variant=\"default\"\n            size=\"lg\"\n            className=\"cursor-pointer relative overflow-hidden\"\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n        >\n            <span>Get started</span>\n            <motion.div\n                variants={animationVariants.getIconContainerVariants(iconColor, iconColorOnHover, iconBgColorOnHover)}\n                animate={isHovered ? \"hover\" : \"default\"}\n                transition={animationTransition}\n                className=\"flex justify-center items-center rounded-full p-0.5\"\n            >\n                <motion.svg\n                    variants={animationVariants.icon}\n                    animate={isHovered ? \"hover\" : \"default\"}\n                    transition={animationTransition}\n                    width=\"1em\"\n                    height=\"1em\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path\n                        fill=\"currentColor\"\n                        d=\"M16.175 13H4v-2h12.175l-5.6-5.6L12 4l8 8l-8 8l-1.425-1.4z\"\n                    />\n                </motion.svg>\n            </motion.div>\n        </Button>\n    );\n};",
      "type": "registry:component"
    }
  ]
}